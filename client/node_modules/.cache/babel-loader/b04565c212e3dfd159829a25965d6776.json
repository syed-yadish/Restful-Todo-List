{"ast":null,"code":"var _jsxFileName = \"/Users/yadishbukhari/Desktop/HackDay-App/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles/App.css\";\nimport { useState, useEffect } from \"react\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport CreateTask from \"./components/CreateTask\";\nimport { v4 as uuidv4 } from \"uuid\"; // import client from \"./services/AxiosServices\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const defaultValue = { id: 'id', name: 'Empty Task' }\n  const [taskItems, setTaskItems] = useState([]);\n  fetch('https://localhost:7109/api/TodoLy').then(res => {\n    /* IF statement checks server response: .catch() does not do this! */\n    if (res.ok) {\n      console.log(\"HTTP request successful\");\n    } else {\n      console.log(\"HTTP request unsuccessful\");\n    }\n\n    return res;\n  }).then(res => res.json()).then(data => console.log(data)) // the data\n  .catch(error => console.log(error)); // error handling\n  // const getTasks = async () => {\n  //   const response = await fetch(\"https://localhost:7109/api/TodoLy\");\n  //   const deserializedJSON = await response.json();\n  //   let tempData = [...taskItems, deserializedJSON];\n  //   if(taskItems[0].id == defaultValue.id) tempData = [deserializedJSON];\n  //   setTaskItems(tempData);\n  // }\n  // const createNewTask = (taskName) => {\n  //   setTaskItems([...taskItems, { name: taskName, id: uuidv4() }]);\n  // };\n\n  const createNewTask = taskName => {\n    client.post(\"\", {\n      name: taskName,\n      id: uuidv4()\n    }).then(response => {\n      setTaskItems([response.data, ...taskItems]);\n    });\n  }; // useEffect(() => {\n  //   client.get().then((response) => {\n  //     setTaskItems(response.data);\n  //   });\n  // }, []);\n  // useEffect(() => {\n  //   setTaskItems(taskItems.filter((task) => task.id !== deleteItem));\n  //   setdeleteItem(\"\");\n  // }, [deleteItem]);\n  // const deleteTask = (id) => {\n  //   client.delete(`${id}`);\n  //   setTaskItems(\n  //     taskItems.filter((task) => {\n  //       return task.id !== id;\n  //     })\n  //   );\n  // };\n  //   const deleteTask = useEffect(() => {\n  //     async function deletePost() {\n  //         await fetch('https://localhost:7109/api/TodoLy/{id}', { method: 'DELETE' });\n  //     }\n  //     deletePost();\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main--heading\",\n      children: \"My ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksBoard, {\n      tasks: taskItems\n    }, taskItems.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DXLFASbkJ8I1VIDC17e+2Gymm34=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TasksBoard","CreateTask","v4","uuidv4","App","taskItems","setTaskItems","fetch","then","res","ok","console","log","json","data","catch","error","createNewTask","taskName","client","post","name","id","response"],"sources":["/Users/yadishbukhari/Desktop/HackDay-App/client/src/App.js"],"sourcesContent":["import \"./styles/App.css\";\nimport { useState, useEffect } from \"react\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport CreateTask from \"./components/CreateTask\";\nimport { v4 as uuidv4 } from \"uuid\";\n// import client from \"./services/AxiosServices\";\n\nfunction App() {\n  // const defaultValue = { id: 'id', name: 'Empty Task' }\n  const [taskItems, setTaskItems] = useState([]);\n\n  fetch('https://localhost:7109/api/TodoLy')\n    .then(res => {    /* IF statement checks server response: .catch() does not do this! */ \n        if (res.ok) { console.log(\"HTTP request successful\") }\n        else { console.log(\"HTTP request unsuccessful\") }\n        return res\n    })\n    .then(res => res.json())\n    .then(data => console.log(data)) // the data\n    .catch(error => console.log(error)) // error handling\n\n  // const getTasks = async () => {\n  //   const response = await fetch(\"https://localhost:7109/api/TodoLy\");\n  //   const deserializedJSON = await response.json();\n  //   let tempData = [...taskItems, deserializedJSON];\n  //   if(taskItems[0].id == defaultValue.id) tempData = [deserializedJSON];\n  //   setTaskItems(tempData);\n  // }\n\n  // const createNewTask = (taskName) => {\n  //   setTaskItems([...taskItems, { name: taskName, id: uuidv4() }]);\n  // };\n\n  const createNewTask = (taskName) => {\n    client\n      .post(\"\", {\n        name: taskName,\n        id: uuidv4(),\n      })\n      .then((response) => {\n        setTaskItems([response.data, ...taskItems]);\n      });\n  };\n\n  // useEffect(() => {\n  //   client.get().then((response) => {\n  //     setTaskItems(response.data);\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   setTaskItems(taskItems.filter((task) => task.id !== deleteItem));\n  //   setdeleteItem(\"\");\n  // }, [deleteItem]);\n\n  // const deleteTask = (id) => {\n  //   client.delete(`${id}`);\n  //   setTaskItems(\n  //     taskItems.filter((task) => {\n  //       return task.id !== id;\n  //     })\n  //   );\n  // };\n\n//   const deleteTask = useEffect(() => {\n//     async function deletePost() {\n//         await fetch('https://localhost:7109/api/TodoLy/{id}', { method: 'DELETE' });\n//     }\n//     deletePost();\n// }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"main--heading\">My ToDo List</h1>\n      {/* <CreateTask createNewTask={createNewTask} /> */}\n      <TasksBoard\n        tasks={taskItems}\n        key={taskItems.id}\n        // cleanTasks={deleteTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;EAEAS,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAI;IAAK;IACd,IAAIA,GAAG,CAACC,EAAR,EAAY;MAAEC,OAAO,CAACC,GAAR,CAAY,yBAAZ;IAAwC,CAAtD,MACK;MAAED,OAAO,CAACC,GAAR,CAAY,2BAAZ;IAA0C;;IACjD,OAAOH,GAAP;EACH,CALH,EAMGD,IANH,CAMQC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EANf,EAOGL,IAPH,CAOQM,IAAI,IAAIH,OAAO,CAACC,GAAR,CAAYE,IAAZ,CAPhB,EAOmC;EAPnC,CAQGC,KARH,CAQSC,KAAK,IAAIL,OAAO,CAACC,GAAR,CAAYI,KAAZ,CARlB,EAJa,CAYyB;EAEtC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAIC,QAAD,IAAc;IAClCC,MAAM,CACHC,IADH,CACQ,EADR,EACY;MACRC,IAAI,EAAEH,QADE;MAERI,EAAE,EAAEnB,MAAM;IAFF,CADZ,EAKGK,IALH,CAKSe,QAAD,IAAc;MAClBjB,YAAY,CAAC,CAACiB,QAAQ,CAACT,IAAV,EAAgB,GAAGT,SAAnB,CAAD,CAAZ;IACD,CAPH;EAQD,CATD,CA1Ba,CAqCb;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEF;EACA;EACA;EACA;EACA;EACA;;;EAEE,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAC,eAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,UAAD;MACE,KAAK,EAAEA;IADT,GAEOA,SAAS,CAACiB,EAFjB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GA3EQlB,G;;KAAAA,G;AA6ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
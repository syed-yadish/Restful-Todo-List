{"ast":null,"code":"var _jsxFileName = \"/Users/saltdev/Desktop/HackDay-App/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles/App.css\";\nimport { useState, useEffect } from \"react\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport CreateTask from \"./components/CreateTask\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport client from \"./services/AxiosServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const defaultValue = { id: 'id', name: 'Empty Task' }\n  const [taskItems, setTaskItems] = useState([]);\n\n  const createNewTask = taskName => {\n    client.post(\"\", {\n      name: taskName,\n      id: uuidv4()\n    }).then(response => {\n      setTaskItems([response.data, ...taskItems, {\n        name: taskName,\n        detail: taskDetail,\n        id: uuidv4(),\n        done: false\n      }]);\n    });\n  };\n\n  useEffect(() => {\n    client.get('?_limit=20').then(response => {\n      setTaskItems(response.data);\n    });\n  }, []);\n\n  const deleteTask = id => {\n    client.delete(`${id}`);\n    setTaskItems(taskItems.filter(task => {\n      return task.id !== id;\n    }));\n  }; // fetch(\"https://localhost:7109/api/TodoLy\")\n  //   .then((res) => {\n  //     /* IF statement checks server response: .catch() does not do this! */\n  //     if (res.ok) {\n  //       console.log(\"HTTP request successful\");\n  //     } else {\n  //       console.log(\"HTTP request unsuccessful\");\n  //     }\n  //     return res;\n  //   })\n  //   .then((res) => res.json())\n  //   .then((data) => console.log(data)) // the data\n  //   .catch((error) => console.log(error)); // error handling\n  // const getTasks = async () => {\n  //   const response = await fetch(\"https://localhost:7109/api/TodoLy\");\n  //   const deserializedJSON = await response.json();\n  //   let tempData = [...taskItems, deserializedJSON];\n  //   if(taskItems[0].id == defaultValue.id) tempData = [deserializedJSON];\n  //   setTaskItems(tempData);\n  // }\n  // const createNewTask = (taskName) => {\n  //   setTaskItems([...taskItems, { name: taskName, id: uuidv4() }]);\n  // };\n  // useEffect(() => {\n  //   setTaskItems(taskItems.filter((task) => task.id !== deleteItem));\n  //   setdeleteItem(\"\");\n  // }, [deleteItem]);\n  //   const deleteTask = useEffect(() => {\n  //     async function deletePost() {\n  //         await fetch('https://localhost:7109/api/TodoLy/{id}', { method: 'DELETE' });\n  //     }\n  //     deletePost();\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main--heading\",\n      children: \"My ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n      createNewTask: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksBoard, {\n      tasks: taskItems,\n      cleanTasks: deleteTask\n    }, taskItems.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3s7hrz2ZGkR+NJShUDoWyRYem5E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TasksBoard","CreateTask","v4","uuidv4","client","App","taskItems","setTaskItems","createNewTask","taskName","post","name","id","then","response","data","detail","taskDetail","done","get","deleteTask","delete","filter","task"],"sources":["/Users/saltdev/Desktop/HackDay-App/client/src/App.js"],"sourcesContent":["import \"./styles/App.css\";\nimport { useState, useEffect } from \"react\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport CreateTask from \"./components/CreateTask\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport client from \"./services/AxiosServices\";\n\nfunction App() {\n  // const defaultValue = { id: 'id', name: 'Empty Task' }\n  const [taskItems, setTaskItems] = useState([]);\n\n  const createNewTask = (taskName) => {\n    client\n      .post(\"\", {\n        name: taskName,\n        id: uuidv4(),\n      })\n      .then((response) => {\n        setTaskItems([response.data, ...taskItems, {name: taskName, detail: taskDetail, id: uuidv4(), done: false}]);\n      });\n  };\n\n  useEffect(() => {\n    client.get('?_limit=20').then((response) => {\n      setTaskItems(response.data);\n    });\n  }, []);\n\n  const deleteTask = (id) => {\n    client.delete(`${id}`);\n    setTaskItems(\n      taskItems.filter((task) => {\n        return task.id !== id;\n      })\n    );\n  };\n\n  // fetch(\"https://localhost:7109/api/TodoLy\")\n  //   .then((res) => {\n  //     /* IF statement checks server response: .catch() does not do this! */\n  //     if (res.ok) {\n  //       console.log(\"HTTP request successful\");\n  //     } else {\n  //       console.log(\"HTTP request unsuccessful\");\n  //     }\n  //     return res;\n  //   })\n  //   .then((res) => res.json())\n  //   .then((data) => console.log(data)) // the data\n  //   .catch((error) => console.log(error)); // error handling\n\n  // const getTasks = async () => {\n  //   const response = await fetch(\"https://localhost:7109/api/TodoLy\");\n  //   const deserializedJSON = await response.json();\n  //   let tempData = [...taskItems, deserializedJSON];\n  //   if(taskItems[0].id == defaultValue.id) tempData = [deserializedJSON];\n  //   setTaskItems(tempData);\n  // }\n\n  // const createNewTask = (taskName) => {\n  //   setTaskItems([...taskItems, { name: taskName, id: uuidv4() }]);\n  // };\n\n\n\n \n\n  // useEffect(() => {\n  //   setTaskItems(taskItems.filter((task) => task.id !== deleteItem));\n  //   setdeleteItem(\"\");\n  // }, [deleteItem]);\n\n\n\n  //   const deleteTask = useEffect(() => {\n  //     async function deletePost() {\n  //         await fetch('https://localhost:7109/api/TodoLy/{id}', { method: 'DELETE' });\n  //     }\n  //     deletePost();\n  // }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"main--heading\">My ToDo List</h1>\n      <CreateTask createNewTask={createNewTask} />\n      <TasksBoard\n        tasks={taskItems}\n        key={taskItems.id}\n        cleanTasks={deleteTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;EAEA,MAAMU,aAAa,GAAIC,QAAD,IAAc;IAClCL,MAAM,CACHM,IADH,CACQ,EADR,EACY;MACRC,IAAI,EAAEF,QADE;MAERG,EAAE,EAAET,MAAM;IAFF,CADZ,EAKGU,IALH,CAKSC,QAAD,IAAc;MAClBP,YAAY,CAAC,CAACO,QAAQ,CAACC,IAAV,EAAgB,GAAGT,SAAnB,EAA8B;QAACK,IAAI,EAAEF,QAAP;QAAiBO,MAAM,EAAEC,UAAzB;QAAqCL,EAAE,EAAET,MAAM,EAA/C;QAAmDe,IAAI,EAAE;MAAzD,CAA9B,CAAD,CAAZ;IACD,CAPH;EAQD,CATD;;EAWAnB,SAAS,CAAC,MAAM;IACdK,MAAM,CAACe,GAAP,CAAW,YAAX,EAAyBN,IAAzB,CAA+BC,QAAD,IAAc;MAC1CP,YAAY,CAACO,QAAQ,CAACC,IAAV,CAAZ;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMK,UAAU,GAAIR,EAAD,IAAQ;IACzBR,MAAM,CAACiB,MAAP,CAAe,GAAET,EAAG,EAApB;IACAL,YAAY,CACVD,SAAS,CAACgB,MAAV,CAAkBC,IAAD,IAAU;MACzB,OAAOA,IAAI,CAACX,EAAL,KAAYA,EAAnB;IACD,CAFD,CADU,CAAZ;EAKD,CAPD,CArBa,CA8Bb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAMA;EACA;EACA;EACA;EAIA;EACA;EACA;EACA;EACA;EACA;;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAC,eAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,aAAa,EAAEJ;IAA3B;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,UAAD;MACE,KAAK,EAAEF,SADT;MAGE,UAAU,EAAEc;IAHd,GAEOd,SAAS,CAACM,EAFjB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GArFQP,G;;KAAAA,G;AAuFT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/yadishbukhari/Desktop/HackDay-App/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles/App.css\";\nimport { useState, useEffect } from \"react\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport CreateTask from \"./components/CreateTask\"; // import { v4 as uuidv4 } from \"uuid\";\n// import client from \"./services/AxiosServices\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const defaultValue = {\n    id: 'id',\n    name: 'Empty Task'\n  };\n  const [taskItems, setTaskItems] = useState([defaultValue]); // const getTasks = async () => {\n  //   const response = await fetch(\"https://localhost:7109/api/TodoLy\");\n  //   const deserializedJSON = await response.json();\n  //   let tempData = [...taskItems, deserializedJSON];\n  //   if(taskItems[0].id == defaultValue.id) tempData = [deserializedJSON];\n  //   setTaskItems(tempData);\n  // }\n  // const createNewTask = (taskName) => {\n  //   setTaskItems([...taskItems, { name: taskName, id: uuidv4() }]);\n  // };\n  // const createNewTask = (taskName) => {\n  //   client\n  //     .post(\"\", {\n  //       name: taskName,\n  //       id: uuidv4(),\n  //     })\n  //     .then((response) => {\n  //       setTaskItems([response.data, ...taskItems]);\n  //     });\n  // };\n  // useEffect(() => {\n  //   client.get().then((response) => {\n  //     setTaskItems(response.data);\n  //   });\n  // }, []);\n  // useEffect(() => {\n  //   setTaskItems(taskItems.filter((task) => task.id !== deleteItem));\n  //   setdeleteItem(\"\");\n  // }, [deleteItem]);\n  // const deleteTask = (id) => {\n  //   client.delete(`${id}`);\n  //   setTaskItems(\n  //     taskItems.filter((task) => {\n  //       return task.id !== id;\n  //     })\n  //   );\n  // };\n\n  const deleteTask = useEffect(() => {\n    async function deletePost() {\n      await fetch('https://localhost:7109/api/TodoLy/{id}', {\n        method: 'DELETE'\n      });\n    }\n\n    deletePost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main--heading\",\n      children: \"My ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksBoard, {\n      tasks: taskItems,\n      cleanTasks: deleteTask\n    }, taskItems.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"zUMcG6jNrfAdm3IILSDSvW2sRpU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","TasksBoard","CreateTask","App","defaultValue","id","name","taskItems","setTaskItems","deleteTask","deletePost","fetch","method"],"sources":["/Users/yadishbukhari/Desktop/HackDay-App/client/src/App.js"],"sourcesContent":["import \"./styles/App.css\";\nimport { useState, useEffect } from \"react\";\nimport TasksBoard from \"./components/TasksBoard\";\nimport CreateTask from \"./components/CreateTask\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import client from \"./services/AxiosServices\";\n\nfunction App() {\n  const defaultValue = { id: 'id', name: 'Empty Task' }\n  const [taskItems, setTaskItems] = useState([defaultValue]);\n\n  // const getTasks = async () => {\n  //   const response = await fetch(\"https://localhost:7109/api/TodoLy\");\n  //   const deserializedJSON = await response.json();\n  //   let tempData = [...taskItems, deserializedJSON];\n  //   if(taskItems[0].id == defaultValue.id) tempData = [deserializedJSON];\n  //   setTaskItems(tempData);\n  // }\n\n  // const createNewTask = (taskName) => {\n  //   setTaskItems([...taskItems, { name: taskName, id: uuidv4() }]);\n  // };\n\n  // const createNewTask = (taskName) => {\n  //   client\n  //     .post(\"\", {\n  //       name: taskName,\n  //       id: uuidv4(),\n  //     })\n  //     .then((response) => {\n  //       setTaskItems([response.data, ...taskItems]);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   client.get().then((response) => {\n  //     setTaskItems(response.data);\n  //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   setTaskItems(taskItems.filter((task) => task.id !== deleteItem));\n  //   setdeleteItem(\"\");\n  // }, [deleteItem]);\n\n  // const deleteTask = (id) => {\n  //   client.delete(`${id}`);\n  //   setTaskItems(\n  //     taskItems.filter((task) => {\n  //       return task.id !== id;\n  //     })\n  //   );\n  // };\n\n  const deleteTask = useEffect(() => {\n    async function deletePost() {\n        await fetch('https://localhost:7109/api/TodoLy/{id}', { method: 'DELETE' });\n    }\n    deletePost();\n}, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"main--heading\">My ToDo List</h1>\n      {/* <CreateTask createNewTask={createNewTask} /> */}\n      <TasksBoard\n        tasks={taskItems}\n        key={taskItems.id}\n        cleanTasks={deleteTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB,C,CACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,YAAY,GAAG;IAAEC,EAAE,EAAE,IAAN;IAAYC,IAAI,EAAE;EAAlB,CAArB;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAACK,YAAD,CAAD,CAA1C,CAFa,CAIb;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMK,UAAU,GAAGT,SAAS,CAAC,MAAM;IACjC,eAAeU,UAAf,GAA4B;MACxB,MAAMC,KAAK,CAAC,wCAAD,EAA2C;QAAEC,MAAM,EAAE;MAAV,CAA3C,CAAX;IACH;;IACDF,UAAU;EACb,CAL6B,EAK3B,EAL2B,CAA5B;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAI,SAAS,EAAC,eAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,UAAD;MACE,KAAK,EAAEH,SADT;MAGE,UAAU,EAAEE;IAHd,GAEOF,SAAS,CAACF,EAFjB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAjEQF,G;;KAAAA,G;AAmET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}